<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ComProductMapper">

	<sql id="productColumns">productId,supplierId,productCode,productName,productType,productStatus,productModel,summary,introduction,headImgSrc,imgSrc1,imgSrc2,imgSrc3,orderNum,effective,createUserId,createTime,modifyUserId,modifyTime</sql>
	<sql id="productTable">com_product_info</sql>
	
	<resultMap type="comProduct" id="comProductResultMap">
		<id column="productId" property="productId"/>
		<result column="supplierId" property="supplierId"/>
		<result column="productCode" property="productCode"/>
		<result column="productName" property="productName"/>
		<result column="productType" property="productType"/>
		<result column="productStatus" property="productStatus"/>
		<result column="productModel" property="productModel"/>
		<result column="summary" property="summary"/>
		<result column="introduction" property="introduction"/>
		<result column="headImgSrc" property="headImgSrc"/>
		<result column="imgSrc1" property="imgSrc1"/>
		<result column="imgSrc2" property="imgSrc2"/>
		<result column="imgSrc3" property="imgSrc3"/>
		<result column="orderNum" property="orderNum"/>
		<result column="effective" property="effective"/>
		<result column="createUserId" property="createUserId"/>
		<result column="createTime" property="createTime"/>
		<result column="modifyUserId" property="modifyUserId"/>
		<result column="modifyTime" property="modifyTime"/>
	</resultMap>
	
	
	<!-- ****************************custom * start*********************************** -->
	
	<!-- 通过id获取(类)数据 -->
	<select id="findByIdSE" parameterType="String" resultType="comProduct">
		select 
	<include refid="productColumns"/>
		from 
	<include refid="productTable"/>
		where productId = #{productId} 
		AND effective = '01'
		AND productStatus = '01'
	</select>
	
	<update id="updateCode" parameterType="pd">
		UPDATE 
	<include refid="productTable"/>
		SET productCode = CONCAT(
			#{startC},
			(
				SELECT
					A.CODE
				FROM
					(
						SELECT
							(
								COALESCE (
									REPLACE (MAX(productCode), #{startC}, ''),
									#{startN}
								) + #{addValue}
							) CODE
						FROM
	<include refid="productTable"/>
					) A
			)
		)
		WHERE
			productId = #{productId};
	</update>
	
	<!-- ****************************custom * end  *********************************** -->
	
	
	<!-- ****************************common * satrt*********************************** -->
	<!-- 新增 -->
	<insert id="add" parameterType="comProduct">
		insert into 
	<include refid="productTable"/>
		( 
	<include refid="productColumns"/>
		) values (
			#{productId},#{supplierId},#{productCode},#{productName},#{productType},#{productStatus},#{productModel},#{summary},#{introduction},#{headImgSrc},#{imgSrc1},#{imgSrc2},#{imgSrc3},#{orderNum},#{effective},#{createUserId},#{createTime},#{modifyUserId},#{modifyTime}
		)
	</insert>
	
	<!-- 修改 -->
	<update id="edit" parameterType="comProduct">
		update
	<include refid="productTable"/>
		set 
			supplierId = #{supplierId},
			productName = #{productName},
			productType = #{productType},
			productModel = #{productModel},
			summary = #{summary},
			introduction = #{introduction},
			headImgSrc = #{headImgSrc},
			imgSrc1 = #{imgSrc1},
			imgSrc2 = #{imgSrc2},
			imgSrc3 = #{imgSrc3},
			orderNum = #{orderNum},
			modifyUserId = #{modifyUserId},
			modifyTime = #{modifyTime}
		where 
			productId = #{productId} 
	</update>
	
	<!-- 更改状态-->
	<update id="changeStatus" parameterType="comProduct">
		update
	<include refid="productTable"/>
		set 
			productStatus = #{productStatus} ,
			modifyUserId = #{modifyUserId},
			modifyTime = #{modifyTime}
		where 
			productId = #{productId} 
			and productStatus = #{oldValue}
	</update>
	
	<!-- 更改有效性 -->
	<update id="changeEffective" parameterType="comProduct">
		update
	<include refid="productTable"/>
		set 
			effective = #{effective} ,
			modifyUserId = #{modifyUserId},
			modifyTime = #{modifyTime}
		where 
			productId = #{productId} 
			and effective = #{oldValue}
	</update>
	
	<!-- 删除 -->
	<delete id="deleteById" parameterType="String">
		delete from 
	<include refid="productTable"/>
		where productId = #{productId} 
	</delete>
	
	<!-- 批量删除 -->
	<delete id="batchDeleteByIds" parameterType="String">
		delete from 
 <include refid="productTable"/>
		where 
			CONCAT(productId) in 
        <foreach item="id" index="index" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
	</delete>
	
	<!-- 通过id获取(类)数据 -->
	<select id="findById" parameterType="String" resultType="comProduct">
		select 
	<include refid="productColumns"/>
		from 
	<include refid="productTable"/>
		where productId = #{productId} 
	</select>
	
	<!-- 获取(类)List数据  -->
	<select id="listAll" resultType="comProduct">
		select 
	<include refid="productColumns"/>
		from 
	<include refid="productTable"/>
		order by (orderNum+0) DESC
	</select>
	
	<!-- 获取(类)List数据  -->
	<select id="otherHaveCode" parameterType="comProduct" resultMap="comProductResultMap">
		select 
	<include refid="productColumns"/>
		from 
	<include refid="productTable"/>
		where productId != #{productId} 
			 and productCode = #{productCode}
		order by (orderNum+0) DESC
	</select>
	
	<!-- 通过id获取(PageData)数据  -->
	<select id="listPage" parameterType="bgPage" resultType="pd">
			select 
	<include refid="productColumns"/>
		from 
	<include refid="productTable"/>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				productCode LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				or
				productName LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		order by (orderNum+0) DESC
	</select>
	
	<!-- ****************************common * end  ********************************** -->
	
</mapper>